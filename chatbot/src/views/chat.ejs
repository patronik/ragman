<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= chatbotName %></title>
    <link rel="stylesheet" href="<%= baseUrl %>/chat.css">    
     <!-- Include Highlight.js and Marked.js -->
     <script src="https://cdnjs.cloudflare.com/ajax/libs/marked/4.3.0/marked.min.js"></script>
     <script src="https://cdnjs.cloudflare.com/ajax/libs/highlight.js/11.8.0/highlight.min.js"></script> 
</head>
<body>
    <div class="chatbot-container">
        <div class="chatbot-header"><%= chatbotName %></div>
        <div class="chat-thread" id="chat-thread">
            <!-- Messages will be dynamically added here -->
        </div>
        <div class="controls">
            <label> Scenario
                <select id="chat-scenario">
                    <% scenarios.forEach((item) => { %>
                        <option value="<%= item.key %>"><%= item.label %></option>
                    <% }); %>
                </select>                      
            </label>
            <span class="knowledge-base">
                <label>
                    <input type="checkbox" id="use-knowledge-base"> Use Knowledge Base
                </label>
                <label> Category
                    <select class="knowledge-base-options" disabled id="knowledge-category">
                        <% categories.forEach((item) => { %>
                            <option value="<%= item.key %>"><%= item.label %></option>
                        <% }); %>                    
                    </select>
                </label>
                <label> Document limit
                    <select class="knowledge-base-options" disabled id="document-limit">
                        <option value="5">5</option>
                        <option value="10">10</option>
                        <option value="15">15</option>
                    </select>            
                </label>
            </span>    
        </div>        
        <div class="input-container">
            <textarea id="user-input" placeholder="Type your message here..."></textarea>
            <button id="send-button">Send</button>
        </div>
    </div>

    <script>
        const chatThread = document.getElementById('chat-thread');
        const sendButton = document.getElementById('send-button');
        const userInput = document.getElementById('user-input');
        const chatScenario = document.getElementById('chat-scenario');

        const useKnowledgeBase = document.getElementById('use-knowledge-base');                 
        useKnowledgeBase.addEventListener('change', () => {
            for (let element of document.getElementsByClassName('knowledge-base-options')) {
                element.disabled = useKnowledgeBase.checked ? false : true;     
            }            
        });

        const knowledgeCategory = document.getElementById('knowledge-category');
        const documentLimit = document.getElementById('document-limit');      
        
        // Configure syntax highliting
        marked.setOptions({
            highlight: (code, lang) => {
                return hljs.highlightAuto(code, lang ? [lang] : undefined).value;
            }
        });

        const sendMessage = async () => {
            const messageText = userInput.value.trim();
            if (messageText) {
                addMessage('user', messageText);
                userInput.value = '';

                try {
                    const response = await fetch('<%= baseUrl %>/chat', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify({ 
                            prompt: messageText,
                            scenario: chatScenario.value,
                            rag: {
                              enabled: useKnowledgeBase.checked,
                              category: knowledgeCategory.value,
                              limit: documentLimit.value,
                            }
                        })
                    });

                    if (response.ok) {
                        const data = await response.json();
                        addMessage('bot', data.response || 'No response');
                    } else {
                        addMessage('bot', 'Error: Unable to reach the server');
                    }
                } catch (error) {
                    addMessage('bot', 'Error: An unexpected error occurred');
                }
            }
        };

        sendButton.addEventListener('click', sendMessage);
        userInput.addEventListener('keydown', (event) => {
            if (event.key === 'Enter' && !event.shiftKey) {
                sendMessage();
                event.preventDefault();
            } else if (event.key === 'Enter' && event.shiftKey) {
                userInput.value += '\n';
            }
        });

        function addMessage(sender, text) {
            const messageDiv = document.createElement('div');
            messageDiv.className = `message ${sender}`;
            const textDiv = document.createElement('div');
            textDiv.className = 'text';
            textDiv.innerHTML = marked.parse(text);
            messageDiv.appendChild(textDiv);
            chatThread.appendChild(messageDiv);
            chatThread.scrollTop = chatThread.scrollHeight;
        }
    </script>
</body>
</html>
