services:
  embedding-app:
    build: 
      context: ./embedding
      #dockerfile: DockerfileDebug
      dockerfile: Dockerfile
    ports:
      - "${EMBEDDING_APP_PORT}:${EMBEDDING_APP_PORT}"
      #- "9229:9229"
    depends_on:
      - postgresql
    environment:
      - DATABASE_URL=postgresql://${POSTGRESS_USERNAME}:${POSTGRESS_PASSWORD}@postgresql:5432/${POSTGRESS_DBNAME}
  chatbot-app:
    build: 
      context: ./chatbot
      dockerfile: DockerfileDebug
      #dockerfile: Dockerfile
    ports:
      - "${CHAT_APP_PORT}:${CHAT_APP_PORT}"
      - "9229:9229"
    environment:
      - DATABASE_URL=postgresql://${POSTGRESS_USERNAME}:${POSTGRESS_PASSWORD}@postgresql:5432/${POSTGRESS_DBNAME}    
    depends_on:
      - postgresql
  postgresql:
    image: ankane/pgvector:latest
    environment:
      POSTGRES_USER: ${POSTGRESS_USERNAME}
      POSTGRES_PASSWORD: ${POSTGRESS_PASSWORD}
      POSTGRES_DB: ${POSTGRESS_DBNAME}
    volumes:
      - postgresql_data:/var/lib/postgresql/data       
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"    
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: "False" 
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"    
    entrypoint: /bin/sh -c "chmod 600 /pgpass; /entrypoint.sh;"
    user: root
    configs:
      - source: servers.json
        target: /pgadmin4/servers.json
      - source: pgpass
        target: /pgpass
    ports:
      - "8080:80"
    depends_on:
      - postgresql
    volumes:
      - pgadmin_data:/var/lib/pgadmin
configs:
  pgpass:
    content: postgresql:5432:*:${POSTGRESS_USERNAME}:${POSTGRESS_PASSWORD}
  servers.json:
    content: |
      {"Servers": {"1": {
        "Group": "Servers",
        "Name": "AI Chatbot DB",
        "Host": "postgresql",
        "Port": 5432,
        "MaintenanceDB": "postgres",
        "Username": "${POSTGRESS_USERNAME}",
        "PassFile": "/pgpass",
        "SSLMode": "prefer"
      }}}
volumes:
  postgresql_data:
  pgadmin_data: